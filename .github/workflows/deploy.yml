name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack4-webappdeploymentbucket-zywtgrfplzje 

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: |
          mvn clean package -DskipTests
          cd target
          zip -r app.zip *.war

      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp app.zip s3://${{ env.S3BUCKET }}/app.zip
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Create Deployment in CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name CodeDeployAppNameWithASG \
            --deployment-group-name CodeDeployGroupName \
            --s3-location bucket=${{ env.S3BUCKET }},key=app.zip,bundleType=zip \
            --ignore-application-stop-failures
