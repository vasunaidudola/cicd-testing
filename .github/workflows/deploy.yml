name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3BUCKET: ${{ secrets.DEPLOYMENT_BUCKET }} 

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: |
          mvn clean package -DskipTests
          cd target
          zip -r app.zip *.war

      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp app.zip s3://${{ env.S3BUCKET }}/app.zip
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Configure AWS credentials for deploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create Deployment in CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name CodeDeployAppNameWithASG \
            --deployment-group-name CodeDeployGroupName \
            --s3-location bucket=${{ env.S3BUCKET }},key=app.zip,bundleType=zip \
            --ignore-application-stop-failures
